# 构建阶段
FROM node:20-alpine AS builder

# 设置工作目录
WORKDIR /app

# 复制package文件（优化缓存层）
COPY package*.json yarn.lock ./

# 配置yarn使用国内镜像源以提高下载速度
RUN yarn config set registry https://registry.npmmirror.com/

# 安装依赖（此层会被缓存，除非 package.json 或 yarn.lock 变更）
RUN yarn install --frozen-lockfile --network-timeout 300000

# 复制源代码（放在依赖安装之后，避免源码变更影响依赖缓存）
COPY . .

# 构建参数
ARG VITE_API_BASE_URL
ENV VITE_API_BASE_URL=$VITE_API_BASE_URL

# 修改 package.json 跳过 TypeScript 检查（生产环境优化）
RUN sed -i 's/"build": "tsc -b && vite build"/"build": "vite build"/' package.json

# 构建应用
RUN yarn build

# 运行阶段
FROM nginx:alpine

# 复制nginx配置
COPY docker/nginx.conf /etc/nginx/conf.d/default.conf

# 从构建阶段复制构建结果
COPY --from=builder /app/dist /usr/share/nginx/html

# 暴露端口
EXPOSE 80

# 健康检查
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \

# 启动nginx
CMD ["nginx", "-g", "daemon off;"]